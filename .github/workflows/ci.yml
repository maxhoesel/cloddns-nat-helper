---
name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
  release:
    types:
      - published
      - created
  schedule:
    - cron: "0 4 * * 1,4"

jobs:
  lint:
    name: lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3.1.0
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0

  ci:
    needs:
      - lint
    name: "CI"
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3.1.0
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
      - name: Install cargo-make binary
        uses: davidB/rust-cargo-make@v1

      - name: Run tests
        uses: actions-rs/cargo@v1
        with:
          command: test

      - name: Build coverage
        uses: actions-rs/cargo@v1
        with:
          command: make coverage-llvm-cov

      - name: Upload coverage report
        uses: codecov/codecov-action@v2
        with:
          files: ./lcov.info

  docs:
    name: "Docs"
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3.1.0
        with:
          fetch-depth: 0
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true

      - name: Generate docs
        run: cargo doc --no-deps
        env:
          RUSTDOCFLAGS: "-Dwarnings"

  publish:
    name: "Publish to crates.io"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - ci
      - docs
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3.1.0
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true

      - name: Publish crate
        run: cargo publish
        env:
          CARGO_REGISTRY_TOKEN: ${{ secrets.CRATES_TOKEN }}

  release:
    name: "Publish release asset"
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    needs:
      - ci
      - docs
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin
          - x86_64-pc-windows-msvc
    steps:
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          target: "${{ matrix.target }}"
          override: true

      - name: Build release binary
        run: cargo build --release --target ${{ matrix.target }}
        env:
          RUSTFLAGS: "-Dwarnings"

      - name: Create asset archive
        run: tar cvzf binary.tar.gz --directory=target/${{ matrix.target }}/release ${{ github.event.repository.name }}

      - name: Get current GitHub release
        id: get_release
        uses: bruceadams/get-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload release artifact
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.get_release.outputs.upload_url }}
          asset_path: binary.tar.gz
          asset_name: ${{ github.event.repository.name }}-${{ matrix.target }}.tar.gz
          asset_content_type: application/tar+gzip
