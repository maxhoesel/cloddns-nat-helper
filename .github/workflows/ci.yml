---
name: CI
on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * 1,4"

jobs:
  lint:
    name: Linting (pre-commit)
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3

      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Enable cargo caching
        uses: Swatinem/rust-cache@v2

      - name: Run pre-commit checks
        uses: pre-commit/action@v3.0.0

  # Adapted from https://github.com/cantino/mcfly/blob/master/.github/workflows/mean_bean_ci.yml
  # We use cross for all builds for easier cross-compiling to non amd64-linux
  get-cross:
    name: Prepare cross
    runs-on: ubuntu-latest
    steps:
      - uses: XAMPPRocky/get-github-release@v1
        id: cross
        with:
          owner: cross-rs
          repo: cross
          matches: cross-x86_64-unknown-linux-musl
          token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/upload-artifact@v1
        with:
          name: cross-linux-musl
          path: ${{ steps.cross.outputs.install_path }}

  build-test:
    needs:
      - get-cross
    name: "Build+Test (${{ matrix.target.name }})"
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        target:
          - name: aarch64-unknown-linux-gnu
          - name: x86_64-unknown-linux-gnu
          - name: x86_64-pc-windows-gnu

    steps:
      - name: Check out codebase
        uses: actions/checkout@v3
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable
      - name: Enable cargo caching
        uses: Swatinem/rust-cache@v2

      - name: Get cross
        uses: actions/download-artifact@v1
        with:
          name: cross-linux-musl
          path: /usr/bin/

      - name: Build binary
        run: |
          cross build --target ${{ matrix.target.name }}
          cross build --target ${{ matrix.target.name }} --all-features
        env:
          RUSTFLAGS: "-Dwarnings"

      - name: Test binary
        run: |
          cross test --target ${{ matrix.target.name }}
          cross test --target ${{ matrix.target.name }} --all-features

      # Only build coverage for amd64 linux variants, that's enough
      - name: Install cargo-make binary
        uses: davidB/rust-cargo-make@v1
        if: |
          matrix.target.name == "x86_64-unknown-linux-gnu"
      - name: Build coverage
        run: cargo make coverage-llvm-cov
        if: |
          matrix.target.name == "x86_64-unknown-linux-gnu"
      - name: Upload coverage report
        uses: codecov/codecov-action@v3
        with:
          files: ./lcov.info
        if: |
          matrix.target.name == "x86_64-unknown-linux-gnu"

  docs:
    name: "Generate rustdoc"
    runs-on: ubuntu-latest
    steps:
      - name: Check out codebase
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Install rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          override: true
          toolchain: stable

      - name: Enable cargo caching
        uses: Swatinem/rust-cache@v2

      - name: Generate docs
        run: cargo doc --no-deps
        env:
          RUSTDOCFLAGS: "-Dwarnings"
